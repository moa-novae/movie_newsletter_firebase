{"version":3,"sources":["../../src/services/sendMonthlyNewsLetter.js"],"names":["require","config","getIdOfCasts","castArr","fetchIdPromises","map","cast","axios","get","process","env","tmdbKey","encodeURI","castsArr","Promise","all","castIdsArr","forEach","push","data","results","id","getIdOfCompany","companyArr","company","companiesArr","companyIdsArr","discoverMovies","genreIdsArr","directorIdsArr","match","currentDate","format","threeMonthFuture","add","castsStr","join","genresStr","companiesStr","directorsStr","output","finalResults","result","every","finalResult","sort","a","b","popularity","getResultsForOneFilter","filter","genre","productionCompany","director","filterResult","name","recommendMoviesForUser","userFilters","email","filters","allFiltersResults","Object","values","enabled","moviesForUser","transformToEmailContext","imagePath","title","tag","overview","filterResults","sendNewsletter","users","fetchUsersMovies","usersMovies","user","msg","sendMonthlyNewsletter","schedule","scheduleJob","hour","date"],"mappings":"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","sourcesContent":["require(\"dotenv\").config();\nimport schedule from \"node-schedule\";\nimport fetchFilters from \"../db/fetchFilters\";\nimport sendEmail from \"./sendEmail\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport generateEmail from \"./generateEmail\";\n\nasync function getIdOfCasts(castArr) {\n  const fetchIdPromises = castArr.map((cast) =>\n    axios.get(\n      `https://api.themoviedb.org/3/search/person?api_key=${\n        process.env.tmdbKey\n      }&query=${encodeURI(cast)}&page=1&include_adult=false`\n    )\n  );\n  const castsArr = await Promise.all(fetchIdPromises);\n  let castIdsArr = [];\n  castsArr.forEach((cast) => {\n    castIdsArr.push(cast.data.results[0].id);\n  });\n  return castIdsArr;\n}\nasync function getIdOfCompany(companyArr) {\n  const fetchIdPromises = companyArr.map((company) =>\n    axios.get(\n      `https://api.themoviedb.org/3/search/company?api_key=${\n        process.env.tmdbKey\n      }&query=${encodeURI(company)}&page=1&include_adult=false`\n    )\n  );\n  const companiesArr = await Promise.all(fetchIdPromises);\n  let companyIdsArr = [];\n  companiesArr.forEach((company) => {\n    companyIdsArr.push(company.data.results[0].id);\n  });\n  return companyIdsArr;\n}\n\nasync function discoverMovies(\n  castIdsArr,\n  genreIdsArr,\n  companyIdsArr,\n  directorIdsArr,\n  match\n) {\n  const currentDate = moment().format(\"YYYY-MM-DD\");\n  const threeMonthFuture = moment().add(3, \"M\").format(\"YYYY-MM-DD\");\n  if (match === \"all\") {\n    const castsStr = castIdsArr?.join(\"\") || \"\";\n    const genresStr = genreIdsArr?.join(\"\") || \"\";\n    const companiesStr = companyIdsArr?.join(\"\") || \"\";\n    const directorsStr = directorIdsArr?.join(\"\") || \"\";\n    const output = await axios.get(\n      `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.tmdbKey}&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_date.gte=${currentDate}&primary_release_date.lte=${threeMonthFuture}&with_cast=${castsStr}&with_genres=${genresStr}&with_companies=${companiesStr}&with_crew=${directorsStr}`\n    );\n\n    return output.data.results;\n  }\n  if (match === \"any\") {\n    const castsStr = castIdsArr.join(\"|\") || \"\";\n    const genresStr = genreIdsArr?.join(\"|\") || \"\";\n    const companiesStr = companyIdsArr?.join(\"|\") || \"\";\n    const directorsStr = directorIdsArr?.join(\"|\") || \"\";\n    const finalResults = [];\n    if (castsStr) {\n      const output = await axios.get(\n        `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.tmdbKey}&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_date.gte=${currentDate}&primary_release_date.lte=${threeMonthFuture}&with_cast=${castsStr}`\n      );\n      finalResults.push(...output.data.results);\n    }\n    if (genresStr) {\n      const output = await axios.get(\n        `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.tmdbKey}&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_date.gte=${currentDate}&primary_release_date.lte=${threeMonthFuture}&with_genres=${genresStr}`\n      );\n      for (const result of output.data.results) {\n        if (finalResults.every((finalResult) => finalResult.id !== result.id)) {\n          finalResults.push(result);\n        }\n      }\n    }\n    if (companiesStr) {\n      const output = await axios.get(\n        `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.tmdbKey}&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_date.gte=${currentDate}&primary_release_date.lte=${threeMonthFuture}&with_companies=${companiesStr}`\n      );\n      for (const result of output.data.results) {\n        if (finalResults.every((finalResult) => finalResult.id !== result.id)) {\n          finalResults.push(result);\n        }\n      }\n    }\n    if (directorsStr) {\n      const output = await axios.get(\n        `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.tmdbKey}&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_date.gte=${currentDate}&primary_release_date.lte=${threeMonthFuture}&with_crew=${directorsStr}`\n      );\n      for (const result of output.data.results) {\n        if (finalResults.every((finalResult) => finalResult.id !== result.id)) {\n          finalResults.push(result);\n        }\n      }\n    }\n    //sort by popularity desc\n    finalResults.sort((a, b) => b.popularity - a.popularity);\n    return finalResults;\n  }\n}\n\nasync function getResultsForOneFilter(filter) {\n  let castIdsArr;\n  let genreIdsArr;\n  let companyIdsArr;\n  let directorIdsArr;\n  const match = filter.match;\n  if (filter.cast) {\n    castIdsArr = await getIdOfCasts(filter.cast);\n  }\n  if (filter.genre) {\n    genreIdsArr = filter.genre;\n  }\n  if (filter.productionCompany) {\n    companyIdsArr = await getIdOfCompany(filter.productionCompany);\n  }\n  if (filter.director) {\n    directorIdsArr = await getIdOfCasts(filter.director);\n  }\n  const filterResult = await discoverMovies(\n    castIdsArr,\n    genreIdsArr,\n    companyIdsArr,\n    directorIdsArr,\n    match\n  );\n  return { name: filter.name, results: filterResult };\n}\n\nasync function recommendMoviesForUser(userFilters) {\n  //All filters\n  const email = userFilters.email;\n  const filters = userFilters.filters;\n  const allFiltersResults = Object.values(filters).map((filter) => {\n    if (filter.enabled) {\n      return getResultsForOneFilter(filter);\n    } else {\n      return { name: filter.name, results: null };\n    }\n  });\n\n  const moviesForUser = await Promise.all(allFiltersResults);\n  //transform to correct strucuture for handlebar template\n  function transformToEmailContext(filter) {\n    if (filter.results) {\n      return filter.results.map((result) => ({\n        imagePath: result[\"poster_path\"]\n          ? \"https://image.tmdb.org/t/p/original/\" + result[\"poster_path\"]\n          : \"https://drive.google.com/uc?id=1VACVMbk6BHr1ae3JMYBHarXruWVn-whE\",\n        title: result.title,\n        tag: result.overview,\n      }));\n    } else {\n      return null;\n    }\n  }\n  //looping through return results of user's filters\n  let filterResults = [];\n  for (const filter of moviesForUser) {\n    filterResults.push({\n      name: filter.name,\n      results: transformToEmailContext(filter),\n    });\n  }\n  return { email, filterResults };\n}\n\nexport default async function sendNewsletter() {\n  const users = await fetchFilters();\n  const fetchUsersMovies = users.map((users) => recommendMoviesForUser(users));\n  const usersMovies = await Promise.all(fetchUsersMovies);\n  for (const user of usersMovies) {\n    const msg = generateEmail(user);\n    sendEmail(msg);\n  }\n}\n//send newsletter every month \nfunction sendMonthlyNewsletter() {\n  schedule.scheduleJob({ hour: 6, date: 1 }, function () {\n    sendNewsletter();\n  });\n}\n\nsendMonthlyNewsletter();\n"],"file":"sendMonthlyNewsLetter.js"}