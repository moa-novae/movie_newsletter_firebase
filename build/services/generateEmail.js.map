{"version":3,"sources":["../../src/services/generateEmail.js"],"names":["generateEmail","user","template","transformUserToEmailContext","temp","column","row","filterResult","filterResults","name","push","movies","results","result","addBlankToShortRows","i","length","context","mjml","html","msg","to","email","from","process","env","testEmail","subject"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;AAEA;;;;;;;;AASe,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC1C,MAAMC,QAAQ,GAAG,wuCAAjB;AAuCA;;;;;;;;;;;;AAcA;;AACA,WAASC,2BAAT,CAAqCF,IAArC,EAA2C;AACzC,QAAMG,IAAI,GAAG,EAAb;AACA,QAAIC,MAAM,GAAG,CAAb;AACA,QAAIC,GAAG,GAAG,CAAV;;AACA,SAAK,IAAMC,YAAX,IAA2BN,IAAI,CAACO,aAAhC,EAA+C;AAC7C;AACA,UAAMC,IAAI,GAAGF,YAAY,CAACE,IAA1B;AACAL,MAAAA,IAAI,CAACM,IAAL,CAAU;AAAED,QAAAA,IAAF;AAAQE,QAAAA,MAAM,EAAE;AAAhB,OAAV;;AACA,UAAI,CAACJ,YAAY,CAACK,OAAlB,EAA2B;AACzBN,QAAAA,GAAG;AACH;AACD;;AACD,WAAK,IAAMO,MAAX,IAAqBN,YAAY,CAACK,OAAlC,EAA2C;AACzC;AACA,YAAIP,MAAM,GAAG,CAAb,EAAgB;AACdC,UAAAA,GAAG;AACHF,UAAAA,IAAI,CAACM,IAAL,CAAU;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAV;AACAP,UAAAA,IAAI,CAACE,GAAD,CAAJ,CAAUK,MAAV,CAAiBD,IAAjB,CAAsBG,MAAtB;AACAR,UAAAA,MAAM,GAAG,CAAT;AACD,SALD,MAKO;AACLD,UAAAA,IAAI,CAACE,GAAD,CAAJ,CAAUK,MAAV,CAAiBD,IAAjB,CAAsBG,MAAtB;AACAR,UAAAA,MAAM;AACP;AACF;;AAEDC,MAAAA,GAAG;AACJ;;AACD,WAAOF,IAAP;AACD;;AAED,WAASU,mBAAT,CAA6BV,IAA7B,EAAmC;AACjC,SAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,IAAI,CAACY,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,UAAIX,IAAI,CAACW,CAAD,CAAJ,CAAQJ,MAAR,CAAeK,MAAf,KAA0B,CAA9B,EAAiC;AAC/BZ,QAAAA,IAAI,CAACW,CAAD,CAAJ,CAAQJ,MAAR,CAAeD,IAAf,CAAoB,EAApB,EAAwB,EAAxB;AACD;;AACD,UAAIN,IAAI,CAACW,CAAD,CAAJ,CAAQJ,MAAR,CAAeK,MAAf,KAA0B,CAA9B,EAAiC;AAC/BZ,QAAAA,IAAI,CAACW,CAAD,CAAJ,CAAQJ,MAAR,CAAeD,IAAf,CAAoB,EAApB;AACD;AACF;;AACD,WAAON,IAAP;AACD;;AACD,MAAMA,IAAI,GAAGD,2BAA2B,CAACF,IAAD,CAAxC;AACA,MAAMgB,OAAO,GAAGH,mBAAmB,CAACV,IAAD,CAAnC;AACA,MAAMc,IAAI,GAAGhB,QAAQ,CAACe,OAAD,CAArB;AACA,MAAME,IAAI,GAAG,mBAAUD,IAAV,CAAb;AACA,MAAIE,GAAG,GAAG,EAAV;AACAA,EAAAA,GAAG,CAACC,EAAJ,GAASpB,IAAI,CAACqB,KAAd;AACAF,EAAAA,GAAG,CAACG,IAAJ,GAAWC,OAAO,CAACC,GAAR,CAAYC,SAAvB;AACAN,EAAAA,GAAG,CAACO,OAAJ,GAAc,yBAAd;AACAP,EAAAA,GAAG,CAACD,IAAJ,GAAWA,IAAI,CAACA,IAAhB;AAEA,SAAOC,GAAP;AACD","sourcesContent":["import { compile } from \"handlebars\";\nimport mjml2html from \"mjml\";\n//user =>\n\n/* \n{\n  email: '',\n  filterResults: [\n    {name, results: []}\n  ]\n}\n*/\n\nexport default function generateEmail(user) {\n  const template = compile(`\n  <mjml>\n  <mj-body>\n    <mj-section>\n      <mj-column>\n        <mj-text font-weight=\"bold\" align=\"center\" font-size=\"40px\" color=\"#9100ff\" font-family=\"helvetica\">Movie Newsletter</mj-text>\n      </mj-column>\n    </mj-section>\n    {{#each .}}\n    {{#if name}}\n      <mj-section>\n        <mj-column>\n          <mj-text font-size=\"24px\">\n          {{name}}\n          </mj-text>\n        </mj-column>\n      </mj-section>\n    {{/if}}\n      <mj-section>\n      {{#if movies}}\n        {{#movies}}\n          <mj-column>\n            <mj-image width=\"165px\" src={{imagePath}}></mj-image>\n            <mj-text font-weight=\"bold\" align=\"center\" font-size=\"16px\" color=\"#000\" font-family=\"helvetica\">{{title}}</mj-text>\n            <mj-text align=\"left\" font-size=\"13px\" color=\"#000\" font-family=\"helvetica\">{{tag}}</mj-text>\n          </mj-column>\n        {{/movies}}\n      {{/if}}\n    \n      {{#unless movies}}\n        <mj-column>\n          <mj-text font-weight=\"bold\" align=\"center\" font-size=\"16px\" color=\"#000\" font-family=\"helvetica\">No Movies Found</mj-text>\n        </mj-column>\n      {{/unless}}\n      </mj-section>\n    {{/each}}\n  </mj-body>\n  </mjml>`);\n\n  /* \n[\n  {\n    filterName:\n    movies: [\n      {\n        imagePath, title, tag\n      }\n    ]\n  }\n]\n\n\n*/\n  //movies ordered as 3 columns each row for the email template\n  function transformUserToEmailContext(user) {\n    const temp = [];\n    let column = 1;\n    let row = 0;\n    for (const filterResult of user.filterResults) {\n      //loop over filters of one user\n      const name = filterResult.name;\n      temp.push({ name, movies: [] });\n      if (!filterResult.results) {\n        row++;\n        continue;\n      }\n      for (const result of filterResult.results) {\n        //loop over recomended movies\n        if (column > 3) {\n          row++;\n          temp.push({ movies: [] });\n          temp[row].movies.push(result);\n          column = 2;\n        } else {\n          temp[row].movies.push(result);\n          column++;\n        }\n      }\n\n      row++;\n    }\n    return temp;\n  }\n\n  function addBlankToShortRows(temp) {\n    for (let i = 0; i < temp.length; i++) {\n      if (temp[i].movies.length === 1) {\n        temp[i].movies.push([], []);\n      }\n      if (temp[i].movies.length === 2) {\n        temp[i].movies.push([]);\n      }\n    }\n    return temp;\n  }\n  const temp = transformUserToEmailContext(user);\n  const context = addBlankToShortRows(temp);\n  const mjml = template(context);\n  const html = mjml2html(mjml);\n  let msg = {};\n  msg.to = user.email;\n  msg.from = process.env.testEmail;\n  msg.subject = \"Montly Movie Newsletter\";\n  msg.html = html.html;\n\n  return msg;\n}\n"],"file":"generateEmail.js"}